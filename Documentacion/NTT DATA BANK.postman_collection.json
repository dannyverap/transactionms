{
	"info": {
		"_postman_id": "8fe41157-86c3-4457-9a75-55dbce3f3547",
		"name": "NTT DATA BANK",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27461062"
	},
	"item": [
		{
			"name": "Customers",
			"item": [
				{
					"name": "Get lista de clientes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url_customer}}/{{customer_uri}}?limit=20&offset=0",
							"host": [
								"{{base_url_customer}}"
							],
							"path": [
								"{{customer_uri}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get cliente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url_customer}}/{{customer_uri}}/43ee6a08-ebf0-41f3-b350-7fc7b0788f9d",
							"host": [
								"{{base_url_customer}}"
							],
							"path": [
								"{{customer_uri}}",
								"43ee6a08-ebf0-41f3-b350-7fc7b0788f9d"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Crear cliente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Danny\",\n    \"apellido\":\"Vera Palomino\",\n    \"dni\": \"77819143\",\n    \"email\": \"das3s@gm.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url_customer}}/{{customer_uri}}",
							"host": [
								"{{base_url_customer}}"
							],
							"path": [
								"{{customer_uri}}"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Actualizar datos de clientes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"[updated]Danny\",\n    \"apellido\":\"[updated]Vera Palomino\",\n    \"dni\":\"11112222\",\n    \"email\": \"nttdata@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url_customer}}/{{customer_uri}}/064b9da6-d129-48d2-bcd9-9aa60837c2b6",
							"host": [
								"{{base_url_customer}}"
							],
							"path": [
								"{{customer_uri}}",
								"064b9da6-d129-48d2-bcd9-9aa60837c2b6"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Eliminar cliente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url_customer}}/{{customer_uri}}/47f83850-7499-482b-97ad-724a01f025c9",
							"host": [
								"{{base_url_customer}}"
							],
							"path": [
								"{{customer_uri}}",
								"47f83850-7499-482b-97ad-724a01f025c9"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "Accounts",
			"item": [
				{
					"name": "Get lista de cuentas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url_account}}/{{account_uri}}?clienteId=",
							"host": [
								"{{base_url_account}}"
							],
							"path": [
								"{{account_uri}}"
							],
							"query": [
								{
									"key": "clienteId",
									"value": ""
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get cuenta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url_account}}/{{account_uri}}/3e7e6d93-b73f-48d5-b2d3-fc9b4dcdc194",
							"host": [
								"{{base_url_account}}"
							],
							"path": [
								"{{account_uri}}",
								"3e7e6d93-b73f-48d5-b2d3-fc9b4dcdc194"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Crear cuenta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"saldo\": 665,\n  \"tipoCuenta\": \"Corriente\",\n    \"clienteId\": \"c7b8701e-8b45-454d-a640-2b3918fa651b\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url_account}}/{{account_uri}}",
							"host": [
								"{{base_url_account}}"
							],
							"path": [
								"{{account_uri}}"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Actualizar datos de cuenta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tipoCuenta\": \"Ahorro\",\n  \"clienteId\": \"d7bb384c-9a94-49a6-a4a5-1926d0d61e95\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url_account}}/{{account_uri}}/921fe5bf-2a0c-4fc0-92f5-8b7234c77b5a",
							"host": [
								"{{base_url_account}}"
							],
							"path": [
								"{{account_uri}}",
								"921fe5bf-2a0c-4fc0-92f5-8b7234c77b5a"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Depositar dinero",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"dinero\": 992\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url_account}}/{{account_uri}}/7904fa08-4750-4bfb-859d-581ff2696d4e/depositar",
							"host": [
								"{{base_url_account}}"
							],
							"path": [
								"{{account_uri}}",
								"7904fa08-4750-4bfb-859d-581ff2696d4e",
								"depositar"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Transferir dinero",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"dinero\": 540,\n   \"idCuentaDestino\":\"431ab46e-d396-4b2a-a755-b1214d65f8c6\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url_account}}/{{account_uri}}/7904fa08-4750-4bfb-859d-581ff2696d4e/transferir",
							"host": [
								"{{base_url_account}}"
							],
							"path": [
								"{{account_uri}}",
								"7904fa08-4750-4bfb-859d-581ff2696d4e",
								"transferir"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Retirar dinero",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"dinero\":665\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url_account}}/{{account_uri}}/93df8e23-0351-4a53-832f-66f68fca1a09/retirar",
							"host": [
								"{{base_url_account}}"
							],
							"path": [
								"{{account_uri}}",
								"93df8e23-0351-4a53-832f-66f68fca1a09",
								"retirar"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Delete cuenta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url_account}}/{{account_uri}}/3e7e6d93-b73f-48d5-b2d3-fc9b4dcdc194",
							"host": [
								"{{base_url_account}}"
							],
							"path": [
								"{{account_uri}}",
								"3e7e6d93-b73f-48d5-b2d3-fc9b4dcdc194"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Historial de transacciones",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url_transaction}}/{{transaction_uri}}/historial",
							"host": [
								"{{base_url_transaction}}"
							],
							"path": [
								"{{transaction_uri}}",
								"historial"
							]
						}
					},
					"response": []
				},
				{
					"name": "Registrar depósito",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n        \"tipo\": \"Deposito\",\r\n        \"fecha\": \"2024-10-07\",\r\n        \"monto\": 992.0,\r\n        \"cuentaOrigen\": null,\r\n        \"cuentaDestino\": \"4823COR565\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url_transaction}}/{{transaction_uri}}/deposito",
							"host": [
								"{{base_url_transaction}}"
							],
							"path": [
								"{{transaction_uri}}",
								"deposito"
							]
						}
					},
					"response": []
				},
				{
					"name": "Registrar retiro",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n        \"tipo\": \"Retiro\",\r\n        \"fecha\": \"2024-10-07\",\r\n        \"monto\": 992.0,\r\n        \"cuentaOrigen\": null,\r\n        \"cuentaDestino\": \"4823COR565\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url_transaction}}/{{transaction_uri}}/retiro",
							"host": [
								"{{base_url_transaction}}"
							],
							"path": [
								"{{transaction_uri}}",
								"retiro"
							]
						}
					},
					"response": []
				},
				{
					"name": "Registrar transferencia",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n        \"tipo\": \"Transferencia\",\r\n        \"fecha\": \"2024-10-07\",\r\n        \"monto\": 992.0,\r\n        \"cuentaOrigen\": \"1321AHOR321\",\r\n        \"cuentaDestino\": \"4823COR565\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url_transaction}}/{{transaction_uri}}/transferencia",
							"host": [
								"{{base_url_transaction}}"
							],
							"path": [
								"{{transaction_uri}}",
								"transferencia"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url_customer",
			"value": "http://localhost:8081"
		},
		{
			"key": "customer_uri",
			"value": "customer",
			"type": "string"
		},
		{
			"key": "base_url_account",
			"value": "http://localhost:8082",
			"type": "string"
		},
		{
			"key": "account_uri",
			"value": "account",
			"type": "string"
		},
		{
			"key": "base_url_transaction",
			"value": "http://localhost:8083",
			"type": "string"
		},
		{
			"key": "transaction_uri",
			"value": "transaction",
			"type": "string"
		}
	]
}